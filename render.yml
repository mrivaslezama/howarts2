
# setup the database
databases:
  - name: mysite
    databaseName: mysite_production
    user: postgres

services:
  # redis for cache and bg jobs
  - type: redis
    name: sidekiq-redis
    ipAllowList: [] # only allow internal connections
    plan: free # optional (defaults to starter)
    maxmemoryPolicy: noeviction

  # trigger bg jobs
  - type: cron
    name: update_all_and_ping
    env: ruby
    schedule: '*/5 * * * *'
    buildCommand: 'bundle install; bundle exec rake assets:precompile; bundle exec rake assets:clean;'
    startCommand: rake refresh_api_data:update_all_and_ping --trace
    envVars:
      # give access to db
      - key: DATABASE_URL
        fromDatabase:
          name: monndb
          property: connectionString
      - key: RAILS_MASTER_KEY
        sync: false
      - key: REDIS_URL # this must match the name of the environment variable used in production.rb
        fromService:
          type: redis
          name: sidekiq-redis
          property: connectionString

  # runs bg jobs
  - type: worker
    name: sidekiq-worker
    env: ruby
    buildCommand: bundle install
    startCommand: bundle exec sidekiq -C config/sidekiq.yml
    envVars:
      # give access to db
      - key: DATABASE_URL
        fromDatabase:
          name: monndb
          property: connectionString
      - key: RAILS_MASTER_KEY
        sync: false
      - key: REDIS_URL # this must match the name of the environment variable used in production.rb
        fromService:
          type: redis
          name: sidekiq-redis
          property: connectionString

  #  main app
  - type: web
    name: monn
    env: ruby
    buildCommand: './bin/render-build.sh'
    startCommand: 'bundle exec puma -C config/puma.rb -t 5:5 -p ${PORT:-3000} -e ${RACK_ENV:-development}'
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: monndb
          property: connectionString
      - key: RAILS_MASTER_KEY
        sync: false
      - key: REDIS_URL # this must match the name of the environment variable used in production.rb
        fromService:
          type: redis
          name: sidekiq-redis
          property: connectionString